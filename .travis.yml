os: linux
sudo: required
dist: trusty

language:
  - c

compiler:
  - gcc
  - clang

branches:
  only:
    - devel-server

before_install:
  - sudo apt-get update -qq
  - sudo apt-get install -y libavl-dev libev-dev
  - sudo apt-get install -y zlib1g-dev libssl-dev

  - wget https://cmocka.org/files/1.0/cmocka-1.0.1.tar.xz
  - tar -xJvf cmocka-1.0.1.tar.xz
  - cd cmocka-1.0.1 && mkdir build && cd build
  - cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr .. && make -j2 && sudo make install
  - cd ../..

  - git clone https://github.com/CESNET/libyang.git
  - cd libyang; mkdir build; cd build
  - cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr -DCMAKE_BUILD_TYPE=Release ..
  - make -j2 && sudo make install
  - cd ../..

  - wget https://red.libssh.org/attachments/download/177/libssh-0.7.2.tar.xz
  - tar -xJf libssh-0.7.2.tar.xz
  - mkdir libssh-0.7.2/build && cd libssh-0.7.2/build
  - cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr .. && make -j2 && sudo make install
  - cd ../..

  - git clone https://github.com/CESNET/libnetconf2.git
  - cd libnetconf2; mkdir build; cd build
  - git checkout devel
  - cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr -DCMAKE_BUILD_TYPE=Release ..
  - make -j2 && sudo make install
  - cd ../..

  - git clone https://github.com/google/protobuf.git
  - cd protobuf
  - ./autogen.sh && ./configure --prefix=/usr && make -j2 && sudo make install
  - cd ..

  - git clone https://github.com/protobuf-c/protobuf-c.git
  - cd protobuf-c
  - ./autogen.sh && ./configure --prefix=/usr && make -j2 && sudo make install
  - cd ..

  - git clone https://github.com/sysrepo/sysrepo.git
  - cd sysrepo; mkdir build; cd build
  - cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX:PATH=/usr -DREPOSITORY_LOC:PATH=/etc/sysrepo ..
  - make -j2 && sudo make install
  - cd ../..

  - if [ "${CC}" = "gcc" ]; then pip install --user codecov; export CFLAGS="-coverage"; fi

script:
  - mkdir build-server && cd build-server && cmake ../server && make -j2 && ctest -V

after_success:
  - if [ "${CC}" = "gcc" ]; then bash <(curl -s https://codecov.io/bash); fi

